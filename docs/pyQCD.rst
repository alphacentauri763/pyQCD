pyQCD Package
=============

:mod:`run` Module
-----------------

This module provides a set of functions that each accept an xml input
file and follow the instructions contained within it. There are two
functions: the first performs a lattice simulation, creating or
loading a series of gauge fields before performing measurements on
them, such as the calculation of Wilson loops or the computation of
propagators. The second function performs postprocessing on the
data generated by the simulation function.

The two functions may be called from the command line using Python's
module flag. To call the function simulate at the command line, use::

    python -m pyQCD.run -s -i XML_INPUT_FILE

In the case where the postprocessing function is to be called, do::

    python -m pyQCD.run -p -i XML_INPUT_FILE

The results of the simulation measurements are saved in NumPy binary
formats. In the cases of propagator computation and configuration
storage, where the resulting arrays are large in size, the output
file is a zipped NumPy arhive, with extension npz. The arrays within
this file then correspond to the measurements for each field
configuration. Where the resulting arrays are small, the result is
stored in a standard NumPy binary file with an npy extension.

The xml input file contains a series of directives that determine
the actions performed by the two functions. A series of example xml
input files are provided in the examples directory at the root of
the pyQCD repository. For example, from the root of the pyQCD
repository, you could run::

    import pyQCD.run as run
    # Do some simulation
    run.simulate("examples/measure_plaquette.xml")
    # Postprocess the results
    run.postprocess("plot_auto_correlation.xml")

.. automodule:: pyQCD.run
    :members:
    :undoc-members:
    :show-inheritance:

Subpackages
-----------

.. toctree::

    pyQCD.core
    pyQCD.interfaces
    pyQCD.postprocessing

